name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  lint-and-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff bandit safety
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Lint with Ruff
        run: ruff check --output-format=github .

      - name: Security scan with Bandit
        run: bandit -r src/ -f json -o bandit-report.json || true

      - name: Check dependencies for vulnerabilities
        run: safety check --json --output safety-report.json || true

  test:
    runs-on: ubuntu-latest
    needs: lint-and-security
    if: always() && !cancelled()

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Test configuration loading
        run: |
          python -c "
          import os
          os.environ['OPENAI_API_KEY'] = 'test-key'
          from config import get_config
          config = get_config()
          print('Config loaded successfully')
          "

      - name: Test imports
        run: |
          python -c "
          import sys
          sys.path.append('src')
          from src import chain, indexer, retrieval
          print('All modules import successfully')
          "
